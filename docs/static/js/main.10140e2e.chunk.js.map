{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAKd,SACG,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAhBiB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACPC,EADO,0DACgDC,UAAUH,GAD1D,sDAEII,MAAMF,GAFV,cAEPG,EAFO,gBAGMA,EAAKC,OAHX,uBAGNC,EAHM,EAGNA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAR5B,kBAWVM,GAXU,4CAAD,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACfH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGrB,CAACpB,IAEGqB,EDXqBK,CAAa1B,GAA7Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAEnB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAGlDoB,GAAW,mBAAGJ,UAAU,mCAAb,sBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAkB,GAAK,OACZ,cAAC,EAAD,eAAgCA,GAAdA,EAAMhB,aEfnCiB,EAAgB,WAAM,MAEK1C,mBAAS,CAAC,cAFf,mBAExB2C,EAFwB,KAEZ5C,EAFY,KAO/B,OACI,qCACG,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEH,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OAMnB,aALpB,CAKqB,EAAD,CAEAA,SAAUA,GADLA,Y,MCrBzB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.10140e2e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(e)=>{    \r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n        setCategories(cats=>[inputValue,...cats]);\r\n        setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input \r\n           type=\"text\"\r\n           value={inputValue}\r\n           onChange={handleInputChange}\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","export const getGifs=async(category)=>{\r\n        const url=`https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=YZykJflS8pR5X2NLuk9M0H3NEADI6EvG`;\r\n        const resp=await fetch(url);\r\n        const {data}=await resp.json();\r\n        const gifs=data.map(img=>{\r\n            return {\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized_medium.url\r\n            }\r\n        });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading}=useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \r\n        {/* {loading ? <p>Cargando</p>:null } */}\r\n        {/* Es lo mismo que lo anterior */}\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando</p> }\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map(image=>(\r\n                        <GifGridItem key={image.id} {...image}></GifGridItem>\r\n                    ))\r\n                }            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs=>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n            })        \r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n    //const categories=['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n /*   const handleAdd=()=>{\r\n        //setCategories(['One Piece',...categories]);\r\n        setCategories(cats=>[...cats,'One Piece']);\r\n    }*/\r\n    return (\r\n        <>\r\n           <h2>GiftExpertApp</h2> \r\n           <AddCategory setCategories={setCategories}></AddCategory>\r\n           <hr/>\r\n           \r\n        <ol>\r\n            {\r\n                categories.map(category=>(\r\n/*                    <GifGrid \r\n                    key={category} \r\n                    category={category}\r\n                    />                    \r\n                ))*/\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}></GifGrid>\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css'\n\nReactDOM.render(\n  <GiftExpertApp></GiftExpertApp>,\n  document.getElementById('root')\n);"],"sourceRoot":""}